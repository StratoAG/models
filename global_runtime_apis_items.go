// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GlobalRuntimeApisItems global runtime apis items
// swagger:model globalRuntimeApisItems
type GlobalRuntimeApisItems struct {

	// address
	// Required: true
	// Pattern: ^[^\s]+$
	Address *string `json:"address"`

	// expose fd listeners
	ExposeFdListeners bool `json:"exposeFdListeners,omitempty"`

	// level
	// Enum: [user operator admin]
	Level string `json:"level,omitempty"`

	// mode
	// Pattern: ^[^\s]+$
	Mode string `json:"mode,omitempty"`

	// process
	// Pattern: ^[^\s]+$
	Process string `json:"process,omitempty"`
}

// Validate validates this global runtime apis items
func (m *GlobalRuntimeApisItems) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLevel(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProcess(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GlobalRuntimeApisItems) validateAddress(formats strfmt.Registry) error {

	if err := validate.Required("address", "body", m.Address); err != nil {
		return err
	}

	if err := validate.Pattern("address", "body", string(*m.Address), `^[^\s]+$`); err != nil {
		return err
	}

	return nil
}

var globalRuntimeApisItemsTypeLevelPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["user","operator","admin"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		globalRuntimeApisItemsTypeLevelPropEnum = append(globalRuntimeApisItemsTypeLevelPropEnum, v)
	}
}

const (

	// GlobalRuntimeApisItemsLevelUser captures enum value "user"
	GlobalRuntimeApisItemsLevelUser string = "user"

	// GlobalRuntimeApisItemsLevelOperator captures enum value "operator"
	GlobalRuntimeApisItemsLevelOperator string = "operator"

	// GlobalRuntimeApisItemsLevelAdmin captures enum value "admin"
	GlobalRuntimeApisItemsLevelAdmin string = "admin"
)

// prop value enum
func (m *GlobalRuntimeApisItems) validateLevelEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, globalRuntimeApisItemsTypeLevelPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *GlobalRuntimeApisItems) validateLevel(formats strfmt.Registry) error {

	if swag.IsZero(m.Level) { // not required
		return nil
	}

	// value enum
	if err := m.validateLevelEnum("level", "body", m.Level); err != nil {
		return err
	}

	return nil
}

func (m *GlobalRuntimeApisItems) validateMode(formats strfmt.Registry) error {

	if swag.IsZero(m.Mode) { // not required
		return nil
	}

	if err := validate.Pattern("mode", "body", string(m.Mode), `^[^\s]+$`); err != nil {
		return err
	}

	return nil
}

func (m *GlobalRuntimeApisItems) validateProcess(formats strfmt.Registry) error {

	if swag.IsZero(m.Process) { // not required
		return nil
	}

	if err := validate.Pattern("process", "body", string(m.Process), `^[^\s]+$`); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GlobalRuntimeApisItems) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GlobalRuntimeApisItems) UnmarshalBinary(b []byte) error {
	var res GlobalRuntimeApisItems
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
