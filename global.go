// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Global Global
//
// HAProxy global configuration
// swagger:model global
type Global struct {

	// daemon
	// Enum: [enabled disabled]
	Daemon string `json:"daemon,omitempty"`

	// maxconn
	Maxconn int64 `json:"maxconn,omitempty"`

	// nbproc
	Nbproc int64 `json:"nbproc,omitempty"`

	// runtime api
	RuntimeAPI string `json:"runtime_api,omitempty"`

	// runtime api level
	// Enum: [user operator admin]
	RuntimeAPILevel string `json:"runtime_api_level,omitempty"`

	// runtime api mode
	RuntimeAPIMode string `json:"runtime_api_mode,omitempty"`

	// ssl default bind ciphers
	SslDefaultBindCiphers string `json:"ssl_default_bind_ciphers,omitempty"`

	// ssl default bind options
	SslDefaultBindOptions string `json:"ssl_default_bind_options,omitempty"`

	// tune ssl default dh param
	TuneSslDefaultDhParam int64 `json:"tune_ssl_default_dh_param,omitempty"`
}

// Validate validates this global
func (m *Global) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDaemon(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRuntimeAPILevel(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var globalTypeDaemonPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["enabled","disabled"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		globalTypeDaemonPropEnum = append(globalTypeDaemonPropEnum, v)
	}
}

const (

	// GlobalDaemonEnabled captures enum value "enabled"
	GlobalDaemonEnabled string = "enabled"

	// GlobalDaemonDisabled captures enum value "disabled"
	GlobalDaemonDisabled string = "disabled"
)

// prop value enum
func (m *Global) validateDaemonEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, globalTypeDaemonPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *Global) validateDaemon(formats strfmt.Registry) error {

	if swag.IsZero(m.Daemon) { // not required
		return nil
	}

	// value enum
	if err := m.validateDaemonEnum("daemon", "body", m.Daemon); err != nil {
		return err
	}

	return nil
}

var globalTypeRuntimeAPILevelPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["user","operator","admin"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		globalTypeRuntimeAPILevelPropEnum = append(globalTypeRuntimeAPILevelPropEnum, v)
	}
}

const (

	// GlobalRuntimeAPILevelUser captures enum value "user"
	GlobalRuntimeAPILevelUser string = "user"

	// GlobalRuntimeAPILevelOperator captures enum value "operator"
	GlobalRuntimeAPILevelOperator string = "operator"

	// GlobalRuntimeAPILevelAdmin captures enum value "admin"
	GlobalRuntimeAPILevelAdmin string = "admin"
)

// prop value enum
func (m *Global) validateRuntimeAPILevelEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, globalTypeRuntimeAPILevelPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *Global) validateRuntimeAPILevel(formats strfmt.Registry) error {

	if swag.IsZero(m.RuntimeAPILevel) { // not required
		return nil
	}

	// value enum
	if err := m.validateRuntimeAPILevelEnum("runtime_api_level", "body", m.RuntimeAPILevel); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Global) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Global) UnmarshalBinary(b []byte) error {
	var res Global
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
